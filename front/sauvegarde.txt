// --- Menu latéral ---
const sidenav = document.getElementById("mySidenav") as HTMLElement | null;
const openBtn = document.getElementById("openBtn") as HTMLElement | null;
const closeBtn = document.getElementById("closeBtn") as HTMLElement | null;

if (sidenav && openBtn && closeBtn) {
	openBtn.onclick = openNav;
	closeBtn.onclick = closeNav;
}

function openNav() {
	if (sidenav) {
		sidenav.classList.remove("left-[-250px]");
		sidenav.classList.add("left-0");
	}
}
function closeNav() {
	if (sidenav) {
		sidenav.classList.remove("left-0");
		sidenav.classList.add("left-[-250px]");
	}
}

const canvas = document.getElementById('pong') as HTMLCanvasElement | null;
const playGame = document.getElementById('playGame') as HTMLElement | null;
let animationId: number | null = null;

function launchFullscreen(element: HTMLElement) {
	if (element.requestFullscreen) element.requestFullscreen();
	// Pour compatibilité navigateurs
	// @ts-ignore
	else if (element.webkitRequestFullscreen) element.webkitRequestFullscreen();
	// @ts-ignore
	else if (element.msRequestFullscreen) element.msRequestFullscreen();
}

function exitFullscreen() {
	if (document.exitFullscreen) document.exitFullscreen();
	// @ts-ignore
	else if ((document as any).webkitExitFullscreen) (document as any).webkitExitFullscreen();
	// @ts-ignore
	else if ((document as any).msExitFullscreen) (document as any).msExitFullscreen();
}

if (playGame && canvas) {
	playGame.onclick = () => {
		playGame.classList.add('hidden');
		canvas.classList.remove('hidden');
		launchFullscreen(canvas);
		if (animationId !== null) {
			cancelAnimationFrame(animationId);
			animationId = null;
		}
		draw();
	};

	document.addEventListener('keydown', (e) => {
		if (e.key === 'Escape') {
			if (animationId !== null) {
				cancelAnimationFrame(animationId);
				animationId = null;
			}
			canvas.classList.add('hidden');
			playGame.classList.remove('hidden');
			exitFullscreen();
		}
	});
}


if (canvas) {
	const ctx = canvas.getContext('2d');

	const paddleHeight = 80, paddleWidth = 10;
	let leftY = 160, rightY = 160;
	const paddleSpeed = 10;

	let ballX = 300, ballY = 200, ballVX = 4, ballVY = 4, ballSize = 10;

	const keys: { [key: string]: boolean } = {};

	document.addEventListener('keydown', function (e: KeyboardEvent) {
		keys[e.key] = true;
	});
	document.addEventListener('keyup', function (e: KeyboardEvent) {
		keys[e.key] = false;
	});

	function draw() {

		if (keys['w'] && leftY > 0) leftY -= paddleSpeed;
		if (keys['s'] && leftY < canvas.height - paddleHeight) leftY += paddleSpeed;
		if (keys['ArrowUp'] && rightY > 0) rightY -= paddleSpeed;
		if (keys['ArrowDown'] && rightY < canvas.height - paddleHeight) rightY += paddleSpeed;

		ctx.clearRect(0, 0, canvas.width, canvas.height);


		ctx.fillStyle = 'white';
		ctx.fillRect(10, leftY, paddleWidth, paddleHeight);
		ctx.fillRect(canvas.width - 20, rightY, paddleWidth, paddleHeight);


		ctx.beginPath();
		ctx.arc(ballX, ballY, ballSize, 0, Math.PI * 2);
		ctx.fill();


		ballX += ballVX;
		ballY += ballVY;


		if (ballY < ballSize || ballY > canvas.height - ballSize) ballVY = -ballVY;

		if (ballX - ballSize < 20 && ballY > leftY && ballY < leftY + paddleHeight) ballVX = -ballVX;

		if (ballX + ballSize > canvas.width - 20 && ballY > rightY && ballY < rightY + paddleHeight) ballVX = -ballVX;

		if (ballX < 0 || ballX > canvas.width) {
			ballX = canvas.width / 2;
			ballY = canvas.height / 2;
			ballVX = -ballVX;
		}

		animationId = requestAnimationFrame(draw);
	}
}


const loginBtn = document.getElementById('loginBtn');

loginBtn?.addEventListener('click', () => {
	// Vérifie si le formulaire existe déjà
	if (document.getElementById('loginForm')) return;

	// Crée le conteneur du formulaire
	const formDiv = document.createElement('div');
	formDiv.id = 'loginForm';
	formDiv.className = 'fixed inset-0 flex items-center justify-center bg-black bg-opacity-60 z-50';

	document.body.appendChild(formDiv);
	showLoginForm();
	// Fonction pour afficher le formulaire de connexion
	function showLoginForm() {
		formDiv.innerHTML = `
            <div class="bg-white text-black rounded-lg p-8 shadow-lg w-full max-w-xs">
                <h2 class="text-xl font-bold mb-4 text-center">Connexion</h2>
                <form>
                    <input type="text" placeholder="Nom d'utilisateur" class="w-full mb-3 px-3 py-2 border rounded" />
                    <input type="password" placeholder="Mot de passe" class="w-full mb-4 px-3 py-2 border rounded" />
                    <button type="submit" class="w-full bg-green-600 text-white py-2 rounded hover:bg-green-700">Se connecter</button>
                </form>
                <button id="closeLogin" class="mt-4 w-full text-sm text-gray-500 hover:text-red-500">Annuler</button>
                <button id="signupBtn" class="mt-2 w-full text-sm text-blue-500 hover:text-blue-700 underline">S'inscrire</button>
            </div>
        `;
		attachEvents();
	}

	// Fonction pour afficher le formulaire d'inscription
	function showSignupForm() {
		formDiv.innerHTML = `
            <div class="bg-white text-black rounded-lg p-8 shadow-lg w-full max-w-xs">
                <h2 class="text-xl font-bold mb-4 text-center">Inscription</h2>
                <form>
                    <input type="text" placeholder="Nom d'utilisateur" class="w-full mb-3 px-3 py-2 border rounded" />
                    <input type="email" placeholder="Email" class="w-full mb-3 px-3 py-2 border rounded" />
                    <input type="password" placeholder="Mot de passe" class="w-full mb-4 px-3 py-2 border rounded" />
                    <button type="submit" class="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700">S'inscrire</button>
                </form>
                <button id="closeLogin" class="mt-4 w-full text-sm text-gray-500 hover:text-red-500">Annuler</button>
                <button id="backToLogin" class="mt-2 w-full text-sm text-blue-500 hover:text-blue-700 underline">Déjà un compte ? Se connecter</button>
            </div>
        `;
		attachEvents();
	}

	// Attache les événements aux boutons du formulaire courant
	function attachEvents() {
		const closeBtn = document.getElementById('closeLogin');
		closeBtn?.addEventListener('click', (e) => {
			e.preventDefault();
			formDiv.remove();
		});
		const signupBtn = document.getElementById('signupBtn');
		signupBtn?.addEventListener('click', (e) => {
			e.preventDefault();
			showSignupForm();
		});
		const backToLogin = document.getElementById('backToLogin');
		backToLogin?.addEventListener('click', (e) => {
			e.preventDefault();
			showLoginForm();
		});

		// Empêche le submit du formulaire de recharger la page
		const form = formDiv.querySelector('form');
		form?.addEventListener('submit', (e) => {
			e.preventDefault();
		});

		// Fermer si on clique en dehors du formulaire
		formDiv.addEventListener('click', (e) => {
			if (e.target === formDiv) formDiv.remove();
		});
	}

});